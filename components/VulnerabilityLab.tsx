import React, { useState, type FC } from 'react';
import { VULNERABILITIES, NexusIcon } from '../constants';
import { type Vulnerability, type Simulation } from '../types';
import Card from './common/Card';
import Modal from './common/Modal';

interface VulnerabilityLabProps {
  onLaunchSimulation: (simulation: Simulation) => void;
  onAskNexus: (prompt: string) => void;
}

const SEVERITY_STYLES: Record<Vulnerability['severity'], string> = {
    'Critical': 'bg-red-500/20 text-red-300 border-red-500/50',
    'High': 'bg-orange-500/20 text-orange-300 border-orange-500/50',
    'Medium': 'bg-yellow-500/20 text-yellow-300 border-yellow-500/50',
    'Low': 'bg-blue-500/20 text-blue-300 border-blue-500/50',
};

const VulnerabilityLab: FC<VulnerabilityLabProps> = ({ onLaunchSimulation, onAskNexus }) => {
  const [selectedVuln, setSelectedVuln] = useState<Vulnerability | null>(null);

  const severities = ['Critical', 'High', 'Medium', 'Low'] as Vulnerability['severity'][];

  return (
    <div className="animate-fade-in">
      <h2 className="font-orbitron text-3xl text-center mb-8 text-slate-100 flicker-fast">GLOBAL VULNERABILITY LAB</h2>
      {severities.map(severity => {
        const vulns = VULNERABILITIES.filter(v => v.severity === severity);
        if (vulns.length === 0) return null;
        return (
          <div key={severity} className="mb-12">
            <h3 className={`font-orbitron text-2xl text-cyan-300 border-b-2 ${SEVERITY_STYLES[severity].replace('bg-','border-')} pb-2 mb-6`}>{severity} Threats</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
              {vulns.map(vuln => (
                <Card
                  key={vuln.id}
                  title={vuln.name}
                  description={vuln.description}
                  Icon={vuln.icon}
                  onClick={() => setSelectedVuln(vuln)}
                />
              ))}
            </div>
          </div>
        )
      })}

      {selectedVuln && (
        <Modal title={`${selectedVuln.name} (${selectedVuln.cve})`} onClose={() => setSelectedVuln(null)} widthClass="max-w-4xl">
          <div className="space-y-4">
            <div>
              <span className={`text-sm font-bold px-3 py-1 inline-block rounded-full border ${SEVERITY_STYLES[selectedVuln.severity]}`}>{selectedVuln.severity}</span>
            </div>
            <div>
              <h4 className="font-orbitron text-lg text-cyan-300 mb-2">Summary</h4>
              <p className="text-slate-400 leading-relaxed">{selectedVuln.details.summary}</p>
            </div>
             <div>
              <h4 className="font-orbitron text-lg text-cyan-300 mb-2">Technical Analysis</h4>
              <div className="bg-slate-800/50 border border-slate-700 p-4 rounded-md">
                <p className="text-slate-300 whitespace-pre-wrap font-mono text-sm">{selectedVuln.details.technicalAnalysis}</p>
              </div>
            </div>
            <div className="flex gap-4 pt-4">
              <button 
                onClick={() => onAskNexus(`Explain the impact of the ${selectedVuln.name} vulnerability in simpler terms.`)}
                className="w-full flex items-center justify-center gap-2 bg-slate-700 hover:bg-slate-600 text-cyan-300 font-bold py-2 px-4 rounded transition duration-300"
              >
                <NexusIcon className="w-5 h-5" /> Ask NEXUS-AI
              </button>
              <button 
                onClick={() => {
                  onLaunchSimulation(selectedVuln.simulation);
                  setSelectedVuln(null);
                }}
                className="w-full bg-cyan-600 hover:bg-cyan-500 text-white font-bold py-2 px-4 rounded transition duration-300"
              >
                  Initiate Simulation
              </button>
            </div>
          </div>
        </Modal>
      )}
    </div>
  );
};

export default VulnerabilityLab;
